// schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

/* ---------- Enums ---------- */
enum StationCode {
  JSS
  PSS
  KEF
  // add more when needed
}

enum TransportStatus {
  in_transit
  received
  cancelled
}

/* ---------- Core look-ups ---------- */
model Supplier {
  id         Int            @id @default(autoincrement())
  name       String
  code       String  @unique               // e.g. SUP001

  deposits   OreDeposit[]                  // ore received from outside
  transports OreTransport[]                // ore moved between stations
}

/* ---------- Main tables ---------- */
/// External inflows from suppliers (mines, contractors, etc.)
model OreDeposit {
  id          Int          @id @default(autoincrement())
  stationCode StationCode
  supplierId  Int
  weightTon   Float
  gradeCode   String
   truckNo    String//new added
  depositedAt DateTime     @default(now())

  supplier    Supplier     @relation(fields: [supplierId], references: [id])

  @@index([stationCode, depositedAt])
}

/// Internal movements between stations (dispatch + unload)
/// One row = one trip, with send-side filled at dispatch,
/// and receive-side filled at unload.
model OreTransport {
  id              Int          @id @default(autoincrement())
  fromStation     StationCode
  toStation       StationCode

  truckNo         String?
  sendWeightTon   Float
  receiveWeightTon Float?

  sendGradeCode   String
  receiveGradeCode String?
  
  status           TransportStatus @default(in_transit)
  
  dispatchedAt    DateTime     @default(now())
  receivedAt       DateTime?
  receivedBy       String?

  supplierId      Int?
  supplier        Supplier?    @relation(fields: [supplierId], references: [id])

  @@index([fromStation, dispatchedAt])
  @@index([toStation, receivedAt])
}

/* ---------- System logs ---------- */
model Log {
  id        Int       @id @default(autoincrement())
  level     String    @default("info")   // "info" | "warn" | "error"
  type      String?                      // e.g. "ORE_DEPOSIT", "ORE_DISPATCH"
  metadata  Json?                        // arbitrary payload
  createdAt DateTime @default(now())

  @@index([createdAt])
  @@map("logs")
}
