// schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// schema.prisma  (fully corrected)

/**
 * ---------- Core look-ups ----------
 */
model Station {
  id             Int            @id @default(autoincrement())
  name           String
  ores           Ore[] // back-ref ①
  fromTransports OreTransport[] @relation("FromStation") // back-ref ②
  toTransports   OreTransport[] @relation("ToStation") // back-ref ③
}

model Supplier {
  id   Int    @id @default(autoincrement())
  name String
  code String @unique // e.g. SUP001
  ores Ore[] // back-ref ④
}

/**
 * ---------- Main tables ----------
 */
model Ore {
  id         Int      @id @default(autoincrement())
  stationId  Int
  supplierId Int
  batchRef   String // will be autogen, e.g. SUP001-WL-20250724-001
  weightTon  Float
  gradeCode  String // WL, WC, WF, GL, GC, GF
  createdAt  DateTime @default(now())

  station    Station        @relation(fields: [stationId], references: [id])
  supplier   Supplier       @relation(fields: [supplierId], references: [id])
  transports OreTransport[]
}

model OreTransport {
  id            Int       @id @default(autoincrement())
  oreId         Int
  fromStationId Int
  toStationId   Int
  truckNo       String
  weightTon     Float
  status        String // 'in_transit' | 'received' | 'cancelled'
  departedAt    DateTime
  receivedAt    DateTime?

  ore         Ore     @relation(fields: [oreId], references: [id])
  fromStation Station @relation("FromStation", fields: [fromStationId], references: [id])
  toStation   Station @relation("ToStation", fields: [toStationId], references: [id])
}

model Log {
  id        Int      @id @default(autoincrement())
  level     String   @default("info") // e.g. "info", "warn", "error"
  type      String? // e.g. "ORE_DEPOSIT", "ORE_DESPATCH"
  metadata  Json? // arbitrary payload (Prisma’s JSON type)
  createdAt DateTime @default(now())

  @@index([createdAt]) // fast queries by time
  @@map("logs") // table name = "logs"
}
